#include<iostream>

using namespace std;

int main(int argc, char* argv[])
{
	int a = 0;
	int n = 0;
	int m = 0;
	cin >> a >> n >> m;
	//сначала определим n и m кто они - единицы или нули
	int n_bit = ((a & (1 << n)) >> n);

	int m_bit = ((a & (1 << m)) >> m);

	//c помощью (1<<n) мы получаем число вида 00...00100...00 - единичка стоит по номером n
	//далее с помощью a & (1 << n) получим число 00....x00///00  - где икс уже либо единица 
	//либо ноль, зависит от того, какой бит был в a под номером n, затем "двигаем" этот бит
	//обратно на n вправо таким образом и получая бит из а под номером n, тоже самое для m

	//теперь вычтем из a эти два бита 
	a = a & (~(1 << n));
	a = a & (~(1 << m));
	cout << a << endl;
	// запись ~(1<<n) дает число 11...11011...11 - в котором ноль стоит под номером m или n
	//соответсвенно, затем после a & ~(1<<n) мы получим a, из которого нолик под номером m или n
	//вероломно вырезает бит под номером m или n, обращая его в ноль и таким образом мы отнимаем
	//этот бит из a
	//для того, чтобы реализовать замену этих битов, обьеденяем a без битов m и n с числами
	//в которых мы значение бита n двигаем вправо на m и наоборот, таким образом и получая число
	//a в котором его бит под номером n теперь стоит на месте m и наоборот
	a = a | (n_bit << m) | (m_bit << n);

	return EXIT_SUCCESS;
}